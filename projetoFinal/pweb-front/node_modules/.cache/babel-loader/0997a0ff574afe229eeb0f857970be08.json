{"ast":null,"code":"var _jsxFileName = \"/home/mga/myproject/pweb-front/src/pages/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getTasks } from '.../services/TaskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n\n  const [task, setTasks] = useState([]);\n  const [taskError, setTaskError] = useState('');\n  useEffect(() => {\n    reloadTask();\n  }, []);\n\n  const reloadTask = () => {\n    getTasks().then(res => setTasks(res)).catch(err => setTaskError(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Hello from TaskList \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskList, \"KGgzLqaSZ9qJrGjf52ipVy53NPE=\");\n\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/home/mga/myproject/pweb-front/src/pages/TaskList.js"],"names":["React","useState","useEffect","getTasks","TaskList","task","setTasks","taskError","setTaskError","reloadTask","then","res","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,0BAAvB;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAE9B,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU;AACb,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAK;AACpBN,IAAAA,QAAQ,GACHO,IADL,CACUC,GAAG,IAAIL,QAAQ,CAACK,GAAD,CADzB,EAEKC,KAFL,CAEWC,GAAG,IAAIL,YAAY,CAACK,GAAD,CAF9B;AAGH,GAJD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAnBuBT,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {getTasks} from '.../services/TaskService'\n\nexport default function TaskList(){\n    \n    const [task, setTasks] = useState([])\n    const [taskError, setTaskError] = useState('')\n    \n    useEffect(() => {\n        reloadTask()\n    },[])\n\n    const reloadTask = () =>{\n        getTasks()\n            .then(res => setTasks(res))\n            .catch(err => setTaskError(err)) \n    }\n\n\n    return (\n        <div> Hello from TaskList </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}