{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype State = { [s: string]: any };\n\nconst { useState } = React;\n\nexport const useForm = (\n  initialState: State = {},\n): [State, (e: React.SyntheticEvent) => void] => {\n  const [state, setState] = useState(initialState);\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    const target = e.target as typeof e.target & {\n      [s: string]: string;\n    };\n\n    const { name } = target;\n    const newState =\n      e.type === 'reset'\n        ? () => initialState\n        : (state: State) => ({\n            ...state,\n            [name]: target.type === 'checkbox' ? target.checked : target.value,\n          });\n\n    setState(newState);\n  };\n\n  return [state, handleChange];\n};\n\nexport type FormProps = {\n  initialState: State;\n  onSubmit?: (state: State) => void;\n  children?: React.ReactNode;\n} & React.PropsWithoutRef<JSX.IntrinsicElements['form']>;\n\nexport type Ref = HTMLFormElement;\n\ntype CloneFunc = (child: React.ReactNode) => React.ReactNode;\ntype CloneFuncType = 'value' | 'checked';\ntype Cloner = (type: CloneFuncType) => CloneFunc;\ntype CloneTypes = { [s: string]: CloneFunc };\n\nconst CleanForm = React.forwardRef<Ref, FormProps>(\n  ({ initialState = {}, onSubmit = () => {}, children, ...props }, ref) => {\n    const [state, handleChange] = useForm(initialState);\n\n    const cloner: Cloner = type => child => {\n      const defaultFormValues = {\n        value: '',\n        checked: false,\n        radio: false,\n      };\n\n      return child && (child as any).props\n        ? React.cloneElement(child as any, {\n            [type]: state.hasOwnProperty((child as any).props.name)\n              ? state[(child as any).props.name]\n              : (child as any).props[type]\n              ? (child as any).props[type]\n              : defaultFormValues[type],\n            onChange: handleChange,\n            children: React.Children.map(\n              (child as any).props.children,\n              deepMap,\n            ),\n          })\n        : child;\n    };\n\n    const cloneTypes: CloneTypes = {\n      default: cloner('value'),\n      checkbox: cloner('checked'),\n      radio: (child: React.ReactNode): React.ReactNode => {\n        return (child as any).props\n          ? React.cloneElement(child as any, {\n              checked:\n                (child as any).props.value === state[(child as any).props.name],\n              onChange: handleChange,\n              children: React.Children.map(\n                (child as any).props.children,\n                deepMap,\n              ),\n            })\n          : child;\n      },\n    };\n\n    const deepMap = (child: React.ReactNode): React.ReactNode => {\n      const type = child && (child as any).props && (child as any).props.type;\n      return cloneTypes[type]\n        ? cloneTypes[type](child)\n        : cloneTypes.default(child);\n    };\n\n    const newChildren = React.Children.map(children, deepMap);\n\n    return (\n      <form\n        {...props}\n        ref={ref}\n        onSubmit={e => {\n          if (e) e.preventDefault();\n          onSubmit(state);\n        }}\n        onReset={handleChange}\n      >\n        {newChildren}\n      </form>\n    );\n  },\n);\n\nexport default CleanForm;\n"],"names":["useState","React","useForm","initialState","setState","e","target","name","type","state","checked","value","ref","onSubmit","children","props","handleChange","cloner","child","hasOwnProperty","radio","map","deepMap","cloneTypes","checkbox","onChange","newChildren","preventDefault","onReset"],"mappings":"06BAIQA,EAAaC,EAERC,EAAU,eACrBC,yDAAsB,OAEIH,EAASG,MAArBC,aAmBP,MAjBc,SAACC,OACdC,EAASD,EAAEC,OAITC,EAASD,EAATC,KASRH,EAPa,UAAXC,EAAEG,KACE,kBAAML,GACN,SAACM,yWACIA,OACFF,EAAuB,aAAhBD,EAAOE,KAAsBF,EAAOI,QAAUJ,EAAOK,4BAsBvDV,EAChB,WAAiEW,WAA9DT,aAAAA,aAAe,SAAIU,SAAAA,aAAW,eAAUC,IAAAA,SAAaC,+ZACxBb,EAAQC,MAA/BM,OAAOO,OAERC,EAAiB,SAAAT,UAAQ,SAAAU,gBAOtBA,GAAUA,EAAcH,MAC3Bd,EAAmBiB,UAChBV,EAAOC,EAAMU,eAAgBD,EAAcH,MAAMR,MAC9CE,EAAOS,EAAcH,MAAMR,MAC1BW,EAAcH,MAAMP,GACpBU,EAAcH,MAAMP,GAXL,CACxBG,MAAO,GACPD,SAAS,EACTU,OAAO,GASmBZ,mBACZQ,kBACAf,EAAeoB,IACtBH,EAAcH,MAAMD,SACrBQ,QAGJJ,IAGAK,EAAyB,SACpBN,EAAO,SAChBO,SAAUP,EAAO,WACjBG,MAAO,SAACF,UACEA,EAAcH,MAClBd,EAAmBiB,EAAc,CAC/BR,QACGQ,EAAcH,MAAMJ,QAAUF,EAAOS,EAAcH,MAAMR,MAC5DkB,SAAUT,EACVF,SAAUb,EAAeoB,IACtBH,EAAcH,MAAMD,SACrBQ,KAGJJ,IAIFI,EAAU,SAACJ,OACTV,EAAOU,GAAUA,EAAcH,OAAUG,EAAcH,MAAMP,YAC5De,EAAWf,GACde,EAAWf,GAAMU,GACjBK,UAAmBL,IAGnBQ,EAAczB,EAAeoB,IAAIP,EAAUQ,UAG/CrB,0BACMc,GACJH,IAAKA,EACLC,SAAU,SAAAR,GACJA,GAAGA,EAAEsB,iBACTd,EAASJ,IAEXmB,QAASZ,IAERU"}